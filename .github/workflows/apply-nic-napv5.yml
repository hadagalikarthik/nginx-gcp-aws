name: "NGINX NIC/NAP-V5 Deployment"
on:
  push:
    branches: apply-nic-napv5
env:
  CLOUD_PROVIDER: "GCP"
########### To be set by the user ###########
#  TF_VAR_GCP_BUCKET_NAME: ${{ secrets.TF_VAR_GCP_BUCKET_NAME }}
#  TF_VAR_GCP_REGION: ${{ secrets.TF_VAR_GCP_REGION }}
#  TF_VAR_project_prefix: ${{ secrets.TF_VAR_PROJECT_PREFIX }}
  TF_VAR_GCP_BUCKET_NAME: "hk-bucket-tf"
  TF_VAR_GCP_REGION: "asia-south1"
  TF_VAR_project_prefix: "hk-new-wf"
############################################
  TF_VAR_GCP_PROJECT_ID: ${{ secrets.TF_VAR_GCP_PROJECT_ID }}
  TF_VAR_GOOGLE_CREDENTIALS: ${{ secrets.TF_VAR_GOOGLE_CREDENTIALS }}
  WORKSPACE_PATH: "./GCP/nap"
#  bucket-working-directory: ./${{ secrets.CLOUD_PROVIDER | toLowerCase() }}/bucket
#  infra-working-directory: ./${{ secrets.CLOUD_PROVIDER | toLowerCase() }}/infra
#  cluster-working-directory: ./${{ secrets.CLOUD_PROVIDER | toLowerCase() }}/cluster
#  nap-working-directory: ./${{ secrets.CLOUD_PROVIDER | toLowerCase() }}/nap
#  policy-working-directory: ./${{ secrets.CLOUD_PROVIDER | toLowerCase() }}/policy
#  arcadia-working-directory: ./${{ secrets.CLOUD_PROVIDER | toLowerCase() }}/arcadia
  bucket-working-directory: ./${{ secrets.CLOUD_PROVIDER }}/bucket
  infra-working-directory: ./${{ secrets.CLOUD_PROVIDER }}/infra
  cluster-working-directory: ./${{ secrets.CLOUD_PROVIDER }}/cluster
  nap-working-directory: ./${{ secrets.CLOUD_PROVIDER }}/nap
  policy-working-directory: ./${{ secrets.CLOUD_PROVIDER }}/policy
  arcadia-working-directory: ./${{ secrets.CLOUD_PROVIDER }}/arcadia
  nginx_jwt: ${{ secrets.NGINX_JWT }}

jobs:
  terraform_bootstrap:
#    strategy:
#      matrix:
#        cloud_provider: [ GCP, AWS ]  # Define cloud providers as matrix values
#    name: "Bootstrap Terraform for ${{ matrix.cloud_provider }}"  # Dynamically set job name based on cloud_provider matrix value
#    if: env.CLOUD_PROVIDER == 'GCP'
    name: "GCP Bucket"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./GCP/bucket
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        if: env.CLOUD_PROVIDER == 'AWS'
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.TF_VAR_AWS_REGION }}

      - name: Set up Google Cloud Authentication
        if: env.CLOUD_PROVIDER == 'GCP'
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.TF_VAR_GOOGLE_CREDENTIALS }}

#      - name: Set working directory dynamically
#        run: |
#          export WORKING_DIRECTORY=./${{ env.CLOUD_PROVIDER }}/bucket
#          echo "Working directory is $WORKING_DIRECTORY"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Initialize Terraform
#        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -no-color -input=false -out=tfplan

      - name: Check for Changes
        id: check_changes
        run: |
          if grep -q "No changes." <(terraform show -no-color tfplan); then
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/apply-nic-napv5' && steps.check_changes.outputs.has_changes == 'true'
        run: terraform apply -auto-approve tfplan

